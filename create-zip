#!/bin/bash
app_id=`cat .application_id`
access_key=`cat .access_key`
bucket=`cat .bucket`
secret_key=`cat .secret`
# Temporarily change the name of node_modules so we only save production
# packages and skip dev packages
mv node_modules node_modules_temp
success=$?
npm install --production
for filename in index.js recipes.js show.js; do
    sed -i "s/const APP_ID = '';/const APP_ID = '$app_id';/g" $filename
    sed -i "s/accessKeyId: ''/accessKeyId: '$access_key'/g" $filename
    sed -i "s/Bucket: ''/Bucket: '$bucket'/g" $filename
    sed -i "s/const BUCKET = '';/const BUCKET = '$bucket';/g" $filename
    sed -i "s/secretAccessKey: ''/secretAccessKey: '$secret_key'/g" $filename
done
zip -r recipe-handler-lambda.zip index.js recipes.js show.js package.json node_modules
for filename in index.js recipes.js show.js; do
    sed -i "s/secretAccessKey: '$secret_key'/secretAccessKey: ''/g" $filename
    sed -i "s/const BUCKET = '$bucket';/const BUCKET = '';/g" $filename
    sed -i "s/Bucket: '$bucket'/Bucket: ''/g" $filename
    sed -i "s/accessKeyId: '$access_key'/accessKeyId: ''/g" $filename
    sed -i "s/const APP_ID = '$app_id';/const APP_ID = '';/g" $filename
done
# If the node_modules directory existed before, revert back to the dev
# environment
if [[ ${success} == 0 ]]; then
  rm -rf node_modules
  mv node_modules_temp node_modules
fi
